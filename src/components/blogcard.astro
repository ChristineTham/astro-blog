---
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import { Image } from 'astro:assets'
import Categories from '../components/categories.astro'
import Tags from '../components/tags.astro'

export interface Props {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props

let cat = await getEntry('category', 'general')
if (post.data.categories) {
  cat = await getEntry(post.data.categories[0])
}
const image = post.data.image || (post.data.images && post.data.images[0]) || cat!.data.image
let author = await getEntry('author', 'default')
if (post.data.author) {
  author = await getEntry(post.data.author)
}
---

<section class='p-4 lg:w-1/3 md:w-1/2'>
  <div
    class='p-2 border-1 border-gray-200 rounded-lg bg-white h-full shadow-xl overflow-hidden dark:border-gray-700 dark:bg-gray-800'
  >
    <a href={`${import.meta.env.BASE_URL}` + 'blog/' + post.id}>
      <Image
        src={image}
        alt={post.data.title + ' featured image'}
        class='rounded-lg bg-purple-100 h-64 w-full relative overflow-hidden object-cover object-center dark:bg-purple-800 group-hover:opacity-75'
      />
      <p class='sr-only'>{post.data.title}</p>
    </a>
    <div class='p-6'>
      {post.data.categories && <Categories categories={post.data.categories} />}
      <a href={`${import.meta.env.BASE_URL}` + 'blog/' + post.id}>
        <h1
          class='title-font text-xl text-purple-600 font-bold mt-2 dark:text-purple-300 hover:text-pink-600 dark:hover:text-pink-300'
        >
          {post.data.title}
        </h1>
      </a>
      <div class='flex flex-wrap items-center'>
        {
          post.data.pubDate && (
            <span class='text-xs text-gray-500 leading-none mr-3 py-1 pr-3 border-r-2 border-purple-200 inline-flex items-center dark:text-gray-400 dark:border-purple-600'>
              <div class='i-heroicons-calendar-days mr-1 h-4 w-4' />
              {post.data.pubDate.toDateString()}
            </span>
          )
        }
        {
          post.data.minutesRead && (
            <span class='text-xs text-gray-500 leading-none mr-3 py-1 pr-3 border-r-2 border-purple-200 inline-flex items-center dark:text-gray-400 dark:border-purple-600'>
              <div class='i-heroicons-clock mr-1 h-4 w-4' />
              {post.data.minutesRead}
            </span>
          )
        }
        {
          post.data.author && (
            <span class='text-rosely1 dark:text-rosely7 text-xs leading-none inline-flex items-center'>
              <div class='i-heroicons-user-circle mr-1 h-4 w-4' />
              {author!.data.title}
            </span>
          )
        }
      </div>

      <p class='text-sm text-gray-600 mt-3 italic dark:text-gray-300'>
        {post.data.description}
      </p>
      <Tags tags={post.data.tags} />
    </div>
  </div>
</section>
